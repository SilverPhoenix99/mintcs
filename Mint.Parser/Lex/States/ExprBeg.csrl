%%{
# ignore newline, +/- is a sign.

machine Lexer;

include "definitions.csrl";

comment = '#' ^nl_eof* nl_eof;

EXPR_BEG := |*

    empty_lines;

    comment; # ignore it

    any => {
        fhold;
        return Lexer.SharedState.Advance(this);
    };

*|;

}%%
namespace Mint.Lex.States
{
    internal partial class ExprBeg
    {
        public override State Advance()
        {
            var ts = -1;
			var te = -1;
			var act = 0;
			var cs = Lexer_start;
			var pe = Lexer.Length;
			var eof = pe;

            %% write exec;

            return null;
        }

        %% write data;
    }
}