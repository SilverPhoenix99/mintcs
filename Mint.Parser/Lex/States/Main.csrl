%%{

machine Lexer;

include "definitions.csrl";

bom_marker = '\xef\xbb\xbf';
shebang = '#!' ^nl_eof* nl_eof;
comment = '#' ^nl_eof* nl_eof;

MAIN := |*

    # consume only 1 shebang line
    bom_marker? shebang => { fgoto BOF; };

    bom_marker => { fgoto BOF; };

    any => { fhold; fgoto BOF; };

*|;

action MagicComment {}

BOF := |*

    ws_nl* %TokStart comment => MagicComment;

    any => {
        fhold;
        return Lexer.BegState;
    };

*|;

}%%
namespace Mint.Lex.States
{
    internal partial class Main
    {
        public override State Advance()
        {
            var ts = -1;
			var te = -1;
			var act = 0;
			var cs = Lexer_en_MAIN;
			var pe = Lexer.Length;
			var eof = pe;

            %% write exec;

            return null;
        }

        %% write data;
    }
}