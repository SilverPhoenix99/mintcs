%%{

machine Lexer;

include "definitions.csrl";

bom_marker = '\xef\xbb\xbf';
shebang = '#!' ^nl_eof*;

main := |*

    # consume only 1 shebang line
    bom_marker? shebang => { fgoto BOF; };

    bom_marker => { fgoto BOF; };

    any => {
        fhold;
        fgoto BOF;
    };

*|;

action MagicComment
{
    // TODO
}

BOF := |*

    space* %TokStart comment => MagicComment;

    any => {
        Lexer.CurrentState = Lexer.BegState;
        Lexer.Retry = true;
        fhold;
        fbreak;
    };

*|;

}%%
#pragma warning disable 162

namespace Mint.Lex.States
{
    internal class Main : StateBase
    {
        public Main(Lexer lexer) : base(lexer)
        { }

        public override void Advance()
        {
            Reset(%%{ write start; }%%);

            %% write exec noend;
        }

        %% write data nofinal noerror;
    }
}