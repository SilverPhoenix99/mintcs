%%{

machine Lexer;

include "definitions.csrl";

bom_marker = '\xef\xbb\xbf';
shebang = '#!' ^nl_eof* nl_eof;

MAIN := |*

    # consume only 1 shebang line
    bom_marker? shebang => { fgoto BOF; };

    bom_marker => { fgoto BOF; };

    any => { fhold; fgoto BOF; };

*|;

action MagicComment
{
    // TODO
}

BOF := |*

    space* %TokStart comment => MagicComment;

    any => {
        fhold;
        return Lexer.BegState;
    };

*|;

}%%
#pragma warning disable 162

using Mint.Parse;
using static Mint.Parse.TokenType;

namespace Mint.Lex.States
{
    internal class Main : StateBase
    {
        public Main(Lexer lexer) : base(lexer)
        { }

        public override State Advance(State caller)
        {
            Reset(Lexer_en_MAIN);

            %% write exec;

            return null;
        }

        %% write data;
    }
}